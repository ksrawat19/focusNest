<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Today's Tasks â€“ FocusNest</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    .background-radial-gradient {
      background-color: hsl(218, 41%, 15%);
      background-image: radial-gradient(650px circle at 0% 0%,
          hsl(218, 41%, 35%) 15%,
          hsl(218, 41%, 30%) 35%,
          hsl(218, 41%, 20%) 75%,
          hsl(218, 41%, 19%) 80%,
          transparent 100%),
        radial-gradient(1250px circle at 100% 100%,
          hsl(218, 41%, 45%) 15%,
          hsl(218, 41%, 30%) 35%,
          hsl(218, 41%, 20%) 75%,
          hsl(218, 41%, 19%) 80%,
          transparent 100%);
    }

    .bg-glass {
      background-color: hsla(0, 0%, 100%, 0.9) !important;
      backdrop-filter: saturate(200%) blur(25px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
      background: linear-gradient(135deg, #ad1fff, #44006b);
      border: none;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
      color: white;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(173, 31, 255, 0.3);
      color: white;
    }

    .btn-outline-primary {
      color: #ad1fff;
      border-color: #ad1fff;
      transition: all 0.2s ease;
    }

    .btn-outline-primary:hover {
      background: #ad1fff;
      color: white;
      transform: translateY(-1px);
    }

    .btn-outline-secondary {
      border-color: hsl(218, 81%, 55%);
      color: hsl(218, 81%, 55%);
      transition: all 0.2s ease;
    }

    .btn-outline-secondary:hover {
      background: hsl(218, 81%, 55%);
      color: white;
      transform: translateY(-2px);
    }

    .fade-in {
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.6s ease, transform 0.6s ease;
    }

    .fade-in.animate {
      opacity: 1;
      transform: translateY(0);
    }

    .text-glow {
      text-shadow: 0 0 10px rgba(173, 31, 255, 0.5);
    }

    .today-tasks-hero {
      background: linear-gradient(135deg, hsla(218, 41%, 15%, 0.8), hsla(218, 41%, 20%, 0.8));
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      color: hsl(218, 81%, 95%);
      position: relative;
      overflow: hidden;
      margin-bottom: 3rem;
    }

    .today-tasks-hero::before {
      content: '';
      position: absolute;
      top: -50px;
      left: -50px;
      width: 200px;
      height: 200px;
      background: radial-gradient(#44006b, #ad1fff);
      opacity: 0.1;
      border-radius: 50%;
    }

    .navbar-dark {
      background: rgba(0, 0, 0, 0.3) !important;
      backdrop-filter: blur(10px);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .navbar-brand {
      color: hsl(218, 81%, 75%) !important;
      font-weight: bold;
      letter-spacing: 1px;
      text-shadow: 0 0 5px rgba(173, 31, 255, 0.3);
    }

    .nav-link {
      color: hsl(218, 81%, 65%) !important;
      transition: color 0.2s ease, transform 0.2s ease;
      font-weight: 500;
    }

    .nav-link:hover, .nav-link.active {
      color: hsl(218, 81%, 55%) !important;
      transform: translateY(-1px);
    }

    .task-badge {
      font-size: 0.85rem;
      border-radius: 20px;
      padding: 0.5em 0.75em;
      font-weight: 500;
      transition: transform 0.2s ease;
    }

    .task-badge:hover {
      transform: scale(1.05);
    }

    .status-todo { background: rgba(255, 193, 7, 0.2); color: #ffc107; border: 1px solid #ffc107; }
    .status-in-progress { background: rgba(40, 167, 69, 0.2); color: #28a745; border: 1px solid #28a745; }
    .status-completed { background: rgba(108, 117, 125, 0.2); color: #6c757d; border: 1px solid #6c757d; }
    .status-pending { background: rgba(220, 53, 69, 0.2); color: #dc3545; border: 1px solid #dc3545; }

    footer {
      background: rgba(52, 58, 64, 0.8);
      backdrop-filter: blur(10px);
      color: hsl(218, 81%, 65%);
      border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .list-group-item {
      background: hsla(0, 0%, 100%, 0.7);
      border: 1px solid rgba(255, 255, 255, 0.2);
      margin-bottom: 0.5rem;
      border-radius: 8px;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .list-group-item:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .section-title {
      color: hsl(218, 81%, 95%);
      font-weight: 600;
      position: relative;
      margin-bottom: 1.5rem;
    }

    .section-title::after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 50px;
      height: 3px;
      background: linear-gradient(135deg, #ad1fff, #44006b);
      border-radius: 2px;
    }

    .text-muted {
      color: hsl(218, 81%, 55%) !important;
    }

    /* Responsive tweaks */
    @media (max-width: 768px) {
      body { padding-top: 100px; }
    }

    /* Fixed navbar spacing */
    body { padding-top: 80px; }
  </style>
</head>
<body class="background-radial-gradient">

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark fixed-top">
  <div class="container-fluid">
    <a class="navbar-brand fw-bold" href="/dashboard">
      <i class="bi bi-nest me-2"></i>FocusNest
    </a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse justify-content-end" id="mainNavbar">
      <ul class="navbar-nav">
        <li class="nav-item"><a class="nav-link" href="/tasks"><i class="bi bi-arrow-left me-1"></i>Back to All Tasks</a></li>
        <li class="nav-item"><a class="nav-link" href="/logout"><i class="bi bi-box-arrow-right me-1"></i>Logout</a></li>
      </ul>
    </div>
  </div>
</nav>

<!-- Main Content -->
<main class="container pt-4">
  <!-- Today's Tasks Hero -->
  <section class="today-tasks-hero text-center p-5 rounded-3 fade-in position-relative overflow-hidden">
    <h1 class="mb-3 text-glow">Tasks Due Today</h1>
    <p class="lead mb-0">Focus on what matters most. Knock these out and end the day strong.</p>
  </section>

  <!-- Today's Tasks Section -->
  <section>
    <h4 class="section-title mb-4 fade-in">Priority Tasks</h4>
    <% if (tasks.length === 0) { %>
      <div class="bg-glass text-center p-5 rounded-3 fade-in">
        <i class="bi bi-check-circle display-4 text-success mb-3"></i>
        <p class="text-muted mb-0">You have no tasks due today. ðŸŽ‰</p>
        <p class="text-muted small mt-2">Great job staying ahead!</p>
      </div>
    <% } else { %>
      <div class="list-group fade-in">
        <% tasks.forEach(task => { %>
          <li class="list-group-item d-flex justify-content-between align-items-center">
            <div class="flex-grow-1">
              <strong><%= task.title %></strong>
              <div class="mt-2">
                <small class="text-muted d-block">
                  <i class="bi bi-diagram-3 me-1"></i>Project: <%= task.project_name %>
                </small>
              </div>
            </div>
            <span class="badge task-badge <%= task.status.toLowerCase().replace(' ', '-') %>">
              <i class="bi bi-<%= task.status === 'Completed' ? 'check2-all' : task.status === 'In Progress' ? 'gear' : task.status === 'Pending' ? 'clock' : 'exclamation-triangle' %> me-1"></i>
              <%= task.status %>
            </span>
          </li>
        <% }) %>
      </div>
    <% } %>
  </section>
</main>

<!-- Animation Script -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Trigger initial animations for above-fold elements
    setTimeout(() => {
      document.querySelectorAll('.fade-in').forEach(el => {
        if (el.getBoundingClientRect().top < window.innerHeight) {
          el.classList.add('animate');
        }
      });
    }, 100);

    // Scroll-triggered animations
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
        }
      });
    }, { threshold: 0.1 });

    document.querySelectorAll('.fade-in').forEach(el => observer.observe(el));
  });
</script>

</body>
</html>